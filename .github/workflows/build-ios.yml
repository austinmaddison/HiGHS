name: Build libhighs for iOS

on:
  workflow_dispatch:
  push:
    paths:
      - "CMakeLists.txt"
      - "cmake/**"
      - ".github/workflows/build-ios.yml"
      - "highs/**"
      - "build_scripts/**"
      - "build.py"

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 4
  PYTHON_VERSION: "3.11"
  BUILD_CONFIG: "Release"
  XCFRAMEWORK_NAME: "LibHighs"
  PACKAGE_NAME: "dart-highs-prebuilt-lib-ios"

jobs:
  build-individual:
    name: iOS ${{ matrix.platform }}
    runs-on: macos-14
    strategy:
      matrix:
        platform: [ios-arm64, ios-simulator-arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Ninja
        run: brew install ninja

      - name: Select Xcode 16.2 (supports iOS 18.2 SDK)
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Show Xcode version
        run: xcodebuild -version

      - name: Build platform using build script
        run: |
          python build.py build ${{ matrix.platform }} --config ${{ env.BUILD_CONFIG }} --extract-libs

      - name: Upload individual library
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}
          path: highs_patched/build/${{ matrix.platform }}/libhighs.a
          
  build-xcframework:
    name: iOS XCFramework
    runs-on: macos-14
    needs: [build-individual]
    steps:
      - name: Download individual libraries
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create directories
        run: mkdir -p xcframework/ios-arm64 xcframework/ios-simulator-arm64

      - name: Copy libraries
        run: |
          cp artifacts/ios-arm64/libhighs.a xcframework/ios-arm64/
          cp artifacts/ios-simulator-arm64/libhighs.a xcframework/ios-simulator-arm64/

      - name: Create XCFramework
        run: |
          xcodebuild -create-xcframework \
            -library xcframework/ios-arm64/libhighs.a \
            -library xcframework/ios-simulator-arm64/libhighs.a \
            -output xcframework/${{ env.XCFRAMEWORK_NAME }}.xcframework

      - name: Upload XCFramework
        uses: actions/upload-artifact@v4
        with:
          name: ios-xcframework
          path: xcframework

  package:
    name: Package iOS Release
    needs: [build-individual, build-xcframework]
    runs-on: ubuntu-22.04
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: _artifacts

      - name: List downloaded artifacts
        run: find _artifacts -type f | sort

      - name: Package individual libraries
        run: |
          mkdir -p pkg-individual/ios
          
          # Package individual architectures
          cp -r _artifacts/ios-arm64 pkg-individual/ios/
          cp -r _artifacts/ios-simulator-arm64 pkg-individual/ios/
          
          # Create zip for individual libraries
          (cd pkg-individual && zip -r ../${{ env.PACKAGE_NAME }}-individual.zip .)

      - name: Package XCFramework
        run: |
          # Create CocoaPods-friendly structure
          mkdir -p pkg-xcframework
          cp -r _artifacts/ios-xcframework/${{ env.XCFRAMEWORK_NAME }}.xcframework pkg-xcframework/
          
          # Create podspec file
          cat > pkg-xcframework/${{ env.XCFRAMEWORK_NAME }}.podspec << EOL
          Pod::Spec.new do |s|
            s.name             = '${{ env.XCFRAMEWORK_NAME }}'
            s.version          = '${{ github.run_number }}.${{ github.sha }}'
            s.summary          = 'HiGHS linear optimization solver'
            s.description      = 'HiGHS high performance linear optimization solver packaged for iOS'
            s.homepage         = 'https://github.com/${{ github.repository }}'
            s.license          = { :type => 'MIT' }
            s.author           = { 'HiGHS' => 'https://github.com/${{ github.repository }}' }
            s.source           = { :http => 'https://github.com/${{ github.repository }}/releases/download/ios-v${{ github.run_number }}-${{ github.sha }}/${{ env.PACKAGE_NAME }}.zip' }
            s.platform         = :ios, '12.0'
            s.ios.deployment_target = '12.0'
            s.ios.vendored_frameworks = '${{ env.XCFRAMEWORK_NAME }}.xcframework'
            s.swift_version = '5.0'
            s.pod_target_xcconfig = { 'EXCLUDED_ARCHS[sdk=iphonesimulator*]' => '' }
            s.user_target_xcconfig = { 'EXCLUDED_ARCHS[sdk=iphonesimulator*]' => '' }
          end
          EOL
          
          # Create zip for XCFramework with proper CocoaPods structure
          (cd pkg-xcframework && zip -r ../${{ env.PACKAGE_NAME }}.zip .)

      - name: Upload individual package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}-individual
          path: ${{ env.PACKAGE_NAME }}-individual.zip

      - name: Upload XCFramework package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{ env.PACKAGE_NAME }}.zip
